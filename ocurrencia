#link para compilarlo: https://www.online-python.com/

from threading import Thread, Lock
import time
import random

# Recursos limitados en el restaurante
cubiertos = 3  
cucharas = 4
cucharitas = 3 
cuchillos = 4

# Crear locks para cada recurso
lock_cubiertos = Lock()  
lock_cucharas = Lock()
lock_cucharitas = Lock()
lock_cuchillos = Lock()

# Clase para cada hilo cliente
class Cliente(Thread):

  def __init__(self, id):
    Thread.__init__(self)
    self.id = id # identificador único

  # Código que ejecuta cada hilo  
  def run(self):
    
    print("Cliente", self.id, "entra al restaurante")

    # Verifica si el cliente desea entrada (Clientes 1 y 2)
    if self.id <= 2:
      print("Cliente", self.id, "quiere una entrada") 
      
      # Adquiere un cubierto y una cuchara para la entrada
      lock_cubiertos.acquire()
      lock_cucharas.acquire()
      
      print("Cliente", self.id, "obtiene un cubierto y una cuchara para la entrada")
      
      # Libera los recursos después de su uso
      lock_cubiertos.release()
      lock_cucharas.release()

    # Adquiere un cubierto y un cuchillo para el plato fuerte    
    lock_cubiertos.acquire()
    lock_cuchillos.acquire()
    
    print("Cliente", self.id, "obtiene un cubierto y un cuchillo para el plato fuerte")
    
    # Libera los recursos después de su uso
    lock_cubiertos.release()
    lock_cuchillos.release()

    # Verifica si el cliente desea postre (Clientes 1, 2 y 3)
    if self.id != 4:
      lock_cucharitas.acquire()
      
      print("Cliente", self.id, "obtiene una cucharita para el postre")
      
      # Libera la cucharita después de su uso
      lock_cucharitas.release()

    print("Cliente", self.id, "termina y sale del restaurante")

# Crear hilos de clientes  
clientes = [Cliente(i) for i in range(1, 6)] 

# Iniciar los hilos con un tiempo aleatorio de espera antes de entrar al restaurante
for c in clientes:
  c.start()
  time.sleep(random.random() * 3)
